// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// https://www.prisma.io/docs/orm/prisma-schema/data-model/models
// https://authjs.dev/reference/adapter/prisma
model User {
  id            String    @id @default(uuid())
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  name          String?
  role          Role      @default(USER)
  todos         Todo[]
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

// https://docs.hanko.io/tutorials/nextjs-todo
model Todo {
  id          String   @id @default(uuid())
  title       String
  description String
  complete    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
// temporarily set to optional otherwise prisma will complain that there
// are no default values for the below fields since they would be newly created
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    String?
}

enum Role {
  USER
  ADMIN
}
